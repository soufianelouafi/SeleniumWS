package com.avaya.gsmb.seleniumframework.test;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import com.avaya.gsmb.seleniumframework.log.SeleniumLog;

/**
 *This <b>Class</b> is acting as a Template for the definition of a Application Test Case and is to be inherited by the Application Test Case Class. 
 * @author admin
 *
 */
public abstract class TestCase {
	
	static protected WebDriver m_driver;
	static protected SeleniumLog m_seleniumLog;
    
	
	/**
	 * Selenium WebDriver will be passed to the <b>Constructor</b> 
	 * @param driver the WebDriver
	 */
	
    public TestCase(WebDriver driver){
        
    	m_driver = driver;
    }
    
    /**
     * 
     * @return the member object of SeleniumLog m_seleniumLog.
     */
    
    public void startTest() {
    	log("start");
    	start();
    	log("end");

    	
    }
    
    protected abstract void start();
    
    
    public SeleniumLog getSeleniumLog() {
	
		if(m_seleniumLog==null) { 
			m_seleniumLog = new SeleniumLog();
			m_seleniumLog.createLog();
		}
			
		return m_seleniumLog;
    }
    
    /**
     * closes the Log
     */
    public static void closeLog() {
    	
    	if(m_seleniumLog!=null) {
    		m_seleniumLog.closeLog();
    
    	}
    }
    
    public static boolean isChromeDriver(){
    	
    	boolean bDriver = false;
    	
    	 if (m_driver!=null && m_driver instanceof ChromeDriver) {
    		 bDriver=true;
    	 }
    	 
    	 return bDriver;
    }
    
    public static boolean isFirefoxDriver(){
    	
    	boolean bDriver = false;
    	
    	 if (m_driver!=null && m_driver instanceof FirefoxDriver) {
    		 bDriver=true;
    	 }
    	 
    	 return bDriver;
    }
    
    public boolean log(String info) {
    	String testCase =this.getClass().getSimpleName();
    	SeleniumLog log = getSeleniumLog();
    	log.log(info, testCase);
		return true;
    	
    }
    
    public boolean logInfo(String description) {
    	String testCase =this.getClass().getSimpleName();
    	SeleniumLog log = getSeleniumLog();
    	log.logInfo(testCase,description, "Success");
		return true;
    	
    }
    
    public boolean logError(String description) {
    	String testCase =this.getClass().getSimpleName();
    	SeleniumLog log = getSeleniumLog();
    	log.logError(testCase,description, "Failed");
		return false;
    	
    }
    
}
