package com.avaya.gsmb.seleniumframework.log;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.time.LocalTime;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import com.avaya.gsmb.seleniumframework.config.SeleniumProperties;
//import com.google.common.io.Files;

/**
 * This <b>Class</b> is lays the ground for the creation of a log.
 * @author admin
 *
 */

public class SeleniumLog {

	public static String[] columns = {"Start/End","TestCase","Timestamp","TestDescription","Result"};
	public static Workbook m_workbook;
	public static FileOutputStream m_outputStream;
	public static int m_iRow=0;
	
	/**
	 * gets a Template as a Resource Stream and creates a Log from it
	 */
	public void createLog() {
		
		try {
		    //String excelFilePath = "C:\\Sandbox\\Test\\SeleniumFramework\\src\\main\\java\\com\\avaya\\gsmb\\seleniumframework\\log\\SeleniumFrameworkLog.xlsm";
			//FileInputStream inputStream = new FileInputStream(new File(excelFilePath));
			InputStream is = getClass().getResourceAsStream("SeleniumFrameworkLog.xlsm");
			//m_workbook = new XSSFWorkbook(inputStream);
			m_workbook = new XSSFWorkbook(is);
			//m_outputStream = new FileOutputStream(SeleniumProperties.getProperty("seleniumLog"));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		/*Sheet sheet = workbook.createSheet("Log");
		Font headerFont = workbook.createFont();
		headerFont.setBold(true);
		headerFont.setFontHeightInPoints((short) 17);
		headerFont.setColor(IndexedColors.DARK_RED.getIndex());
		
		
		CellStyle headerCellStyle = workbook.createCellStyle();
		headerCellStyle.setFont(headerFont);
		
		Row headerRow = sheet.createRow(0);
		
		for(int i=0; i < columns.length;i++) {
			Cell cell = headerRow.createCell(i);
			cell.setCellValue(columns[i]);
			cell.setCellStyle(headerCellStyle);	
		}
		

		workbook.write(seleniumLog);
		seleniumLog.close();
		workbook.close();
		*/		
	}
	
	/**
	 * closes the workbook and checks for existing Log files in order to fit file names
	 */
	public void closeLog()  {
		try {
			//m_outputStream = new FileOutputStream(SeleniumProperties.getProperty("seleniumLog"));
			
			String fileOutputPath=SeleniumProperties.getProperty("seleniumLog");
			boolean bExist = false;
			int iFile=0;
			String strPath=fileOutputPath.substring(0, fileOutputPath.length() - 5);
			
			//if a Log exists it creates a new Log file with a fitting Name
			do {
				File fileOutput = new File(fileOutputPath);
			
				if(fileOutput.exists() && !fileOutput.isDirectory()) { 
					bExist=true;
					iFile++;
					fileOutputPath = strPath + iFile + ".xlsm";
					
				}
				else{bExist=false;
					
				}
				
			}while(bExist==true);
			
			m_outputStream = new FileOutputStream(fileOutputPath);
			m_workbook.write(m_outputStream);
			m_outputStream.close();
			m_workbook.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	/**
	 * writes a Info Log, creates cells and set values 
	 * @param testCase String containing Class name of the Test Case
	 * @param info containing Info Message
	 */
	
	private void writeLog(String info, String testCase, String description, String result) {
		m_iRow++;
		Sheet sheet = m_workbook.getSheet("Log");
		Row headerRow = sheet.createRow(m_iRow);
		Cell cell = headerRow.getCell(2);
		
		//creates cell in case doesn't exist
		if(cell==null) { 
			cell = headerRow.createCell(2);
		}
		//sets Timestamp as cell value
		cell.setCellValue(LocalTime.now().toString());
		cell=headerRow.getCell(0);
		if(cell==null) { 
			cell = headerRow.createCell(0);
		}
		cell.setCellValue(info);
		cell=headerRow.getCell(1);
		if(cell==null) { 
			cell = headerRow.createCell(1);
		}
		cell.setCellValue(testCase);
		cell=headerRow.getCell(3);
		if(cell==null) {
			cell = headerRow.createCell(3);
		}
		cell.setCellValue(description);
		cell=headerRow.getCell(4);
		if(cell==null) {
			cell = headerRow.createCell(4);
		}
		cell.setCellValue(result);
		
		
	}
	public void log( String info, String testCase) {
	writeLog(info, testCase, "","");
	}
	public void logInfo(String testCase, String description, String result) {
		writeLog("",testCase,description,result);
	}
	
	public void logError(String testCase, String description, String result) {
		writeLog("",testCase,description,result);
	}
	
	
}
